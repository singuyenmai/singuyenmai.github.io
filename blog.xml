<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Sĩ Nguyên</title>
<link>https://singuyenmai.github.io/blog.html</link>
<atom:link href="https://singuyenmai.github.io/blog.xml" rel="self" type="application/rss+xml"/>
<description>Welcome to Si-Nguyen Mai&#39;s personal website.</description>
<generator>quarto-1.4.551</generator>
<lastBuildDate>Sat, 23 Mar 2024 08:19:10 GMT</lastBuildDate>
<item>
  <title>A chaotic butterfly</title>
  <link>https://singuyenmai.github.io/blog/chaotic-butterfly.en.html</link>
  <description><![CDATA[ 




<section id="once-upon-a-time" class="level1">
<h1>Once upon a time</h1>
<p>In 1963, meteorologist Edward Lorenz published a mathematical model for the dynamics of atmospheric convection. The equations are in very simplistic forms, but the resulting behaviour of the system is not. The way that its values change over time is enormously complex, obstructing attempts to predict its future state. Lorenz created the math, but he also discovered it. Following his work was the development of the important Chaos Theory, which covers concepts like Fractals, Predictibility, and Determinism. These names are more familiar to math specialists, but in the more general public, many probably have heard the term “<em>the Butterfly effect</em>” at some points in their lives. The Lorenz model is the mother of this concept.</p>
</section>
<section id="the-butterfly" class="level1">
<h1>The butterfly</h1>
<p>The Lorenz system comprises of three dynamic elements, or variables, notated as <img src="https://latex.codecogs.com/png.latex?X"> (rate of convection), <img src="https://latex.codecogs.com/png.latex?Y"> (horizontal temperature), and <img src="https://latex.codecogs.com/png.latex?Z"> (vertical temperature). The dynamics of these variables then are described by a set of equations called ordinary differential equations (ODE). These equations represent the rates of change of the variables, and they are as follows:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BdX%7D%7Bdt%7D%20=%20%5Csigma%20(Y%20-%20X)%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BdY%7D%7Bdt%7D%20=%20X%20(%5Crho%20-%20Z)%20-%20Y%0A"> <img src="https://latex.codecogs.com/png.latex?%0A%5Cfrac%7BdZ%7D%7Bdt%7D%20=%20X%20Y%20-%20%5Cbeta%20Z%0A"></p>
<p>I would not go into the details of the equations, nor why Lorenz designed them to be so, nor how to solve them. I assure you, we can completely move on without them. So let’s now stick with this: <img src="https://latex.codecogs.com/png.latex?%5Csigma">, <img src="https://latex.codecogs.com/png.latex?%5Crho">, and <img src="https://latex.codecogs.com/png.latex?%5Cbeta"> are parameters - they are constant, and the solutions of these equations will be the functions describing how the system state, i.e.&nbsp;the variables, change through time - mathematically <img src="https://latex.codecogs.com/png.latex?X(t)">, <img src="https://latex.codecogs.com/png.latex?Y(t)">, and <img src="https://latex.codecogs.com/png.latex?Z(t)">.</p>
<p>To see the “butterfly”, I added some specifications to the model and in solving the equations:</p>
<ol type="1">
<li><img src="https://latex.codecogs.com/png.latex?%5Csigma=10">, <img src="https://latex.codecogs.com/png.latex?%5Crho=28">, and <img src="https://latex.codecogs.com/png.latex?%5Cbeta=8/3"> <br></li>
<li>The timepoints at which we would like to know the values of <img src="https://latex.codecogs.com/png.latex?X">, <img src="https://latex.codecogs.com/png.latex?Y">, and <img src="https://latex.codecogs.com/png.latex?Z">. Here, I let them 100,000 timepoints evenly spaced from 0 to 100. <br></li>
<li>The initial condition, which is the system state at the initial timepoint. Here, it is a set of <img src="https://latex.codecogs.com/png.latex?X_%7Bt=0%7D%20=%200.1,%20Y_%7Bt=0%7D=0.0">, and <img src="https://latex.codecogs.com/png.latex?Z_%7Bt=0%7D=0.0">.</li>
</ol>
<p>Ready for the beauty?</p>
<div class="quarto-embed-nb-cell">
<div id="cell-butterfly2d" class="cell" data-execution_count="2">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://singuyenmai.github.io/blog/chaotic-butterfly.en_files/figure-html/-workshop-lorenz_attractor-lorenz_system-butterfly2d-output-1.png" class="img-fluid figure-img"></p>
<figcaption>… Well, it’s already here.</figcaption>
</figure>
</div>
</div>
</div>
</div>
<p><strong>So, what is this “butterfly” made of?</strong></p>
<p>Technically, what you’re seeing is a 2D plot of <img src="https://latex.codecogs.com/png.latex?X"> against <img src="https://latex.codecogs.com/png.latex?Z"> values. I just hid the coordinate axes. Also, while the butterfly appears to be only a single colorful string, this line is actually just a connection of 100,000 dots that sit very close together.</p>
<p>Wait, but why 100,000 dots? Remember that I talked about the timepoints? These dots are different “states” of <img src="https://latex.codecogs.com/png.latex?X"> and <img src="https://latex.codecogs.com/png.latex?Z"> in time and their varying colors represent this.</p>
<p>Okay. But hey, there are three variables in the system. What it’s like when we also have <img src="https://latex.codecogs.com/png.latex?Y"> there?</p>
<p>Let’s see it in 3D. This time, you can also interact with the graph. You can view the system entirely and inspect it from multiple angles. Try holding your pointer on the image, zooming in/out, and turning it around.</p>
<!-- {{< embed lorenz_system.ipynb#butterfly3d false >}} -->
<p align="center">
<iframe width="510" height="420" frameborder="0" seamless="seamless" src="../workshop/lorenz_attractor/butterfly3d.html">
</iframe>
</p><figcaption class="figure-caption">
Black dot is the system state at time zero.
</figcaption>
<p>
</p>
</section>
<section id="fractal" class="level1">
<h1>Fractal</h1>
<p>The beauty of the “butterfly” comes from the mix of warm and cold colors in both wings. Which insight can this mix of colors - the colors of time, give us into the behaviour of the system? Can you guess?</p>
<p>Let’s view the animation below, and follow the black dot that represents the system state.</p>
<!-- {{< embed lorenz_system.ipynb#animation false >}} -->
<p align="center">
<iframe src="https://giphy.com/embed/DRV9v5BSsIz1Lx0xOs" width="380" height="302" frameborder="0" class="giphy-embed" allowfullscreen="">
</iframe>
</p><p>
</p>
<p>The dot moves around in the XYZ space, showing us how the system state changes as time passes.</p>
<p>Following this movement, you shall see that there is a pattern in it - something is repeated again and again.</p>
<p>At first, the system state circles on the right wing, and when it gets near the center area of left wing, it goes rapidly towards it. <br> However, once it lands on the left wing, it circles out and out - a movement that makes it gradually further away from the center of the left wing and closer to the right wing. <br> Eventually, it gets so close to the center area of the right wing and then, goes straight back to it. <br> Now this time, things are repeated. The system circles out away from the center of the right wing, until it gets close to and switches back to the left wing. <br></p>
<p>This kind of pattern in the movement keeps repeating and seems like never-end. (It truly does!)</p>
<p>Also, if you inspect the interactive 3D plot carefully, you will notice that there is no region where the line crosses or merges back to itself. This tells us that although there is a repeated pattern, the system always takes new paths and never it goes back to an old state.</p>
<blockquote class="blockquote">
<p><em>“No man ever steps in the same river twice.”</em></p>
</blockquote>
<p>The illustration below is an example of a <em>fractal</em> structure. Do you see the similiarities between it and the space-time path of the Lorenz system?</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://singuyenmai.github.io/workshop/lorenz_attractor/sierpinski-zoom41.gif" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
<section id="stability" class="level1">
<h1>Stability</h1>
<!-- Extreme contrast to _chaos_ is _stability_. But what is _stability_ then?  -->
<p>Before going further with all the weirdness of the Lorenz system, I would like to offer you a little short break - a system with a much simpler behaviour.</p>
<p>We will now look at a model for the growth of a population of organisms.</p>
<p>In this model, the population at first grows exponentially, propbably because the resources are still abundant. However, since resources are limited, the population cannot grow to infinity but is restricted to a limit.</p>
<p>Starting with a very few number of individuals, the population grows very fast in the beginning. But eventually, the growth slows down and then, reaches the limit.</p>
<p>Once the limit for population size is reached, the population experiences no more change and remains <em>stable</em> there. There should be death but you would expect the death and birth rates are equivalent.</p>
<div class="quarto-embed-nb-cell">
<div id="cell-logistic-growth" class="cell" data-execution_count="9">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://singuyenmai.github.io/blog/chaotic-butterfly.en_files/figure-html/-workshop-lorenz_attractor-lorenz_system-logistic-growth-output-1.png" id="logistic-growth" class="img-fluid quarto-figure quarto-figure-center anchored figure-img"></p>
</figure>
</div>
</div>
</div>
</div>
<p>This limit of population level is referred as a <em>stable state</em>.</p>
<p>It is also called the <em>stable attractor</em>. Because it also looks like the system (population size) runs towards this level through time and when it reaches there, it sticks there. If we start the population from a variety of initial sizes, we will see that it will always eventually end up at the <em>stable state</em>, like it is attracted to it.</p>
<div class="quarto-embed-nb-cell">
<div id="cell-stable-attractor" class="cell" data-execution_count="17">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://singuyenmai.github.io/blog/chaotic-butterfly.en_files/figure-html/-workshop-lorenz_attractor-lorenz_system-stable-attractor-output-1.png" id="stable-attractor" class="img-fluid quarto-figure quarto-figure-center anchored figure-img"></p>
</figure>
</div>
</div>
</div>
</div>
</section>
<section id="chaos" class="level1">
<h1>Chaos</h1>
<p>Now looking at the Lorenz system again, there is also a feeling that there are some kinds of attractive forces at the centers of the two wings, which pull the system towards them when it approaches them.</p>
<p align="center">
<iframe src="https://giphy.com/embed/DRV9v5BSsIz1Lx0xOs" width="380" height="302" frameborder="0" class="giphy-embed" allowfullscreen="">
</iframe>
</p><p>
</p>
<p>However, it seems that the system can only be attracted to some degree. Once the system lands on one of the center area, it immediately runs away.</p>
<p>The centers of the wings are <em>strange attractors</em>. They attract the system, but when it gets too close, they repulse it. These two <em>strange attractors</em> result in the chaotic behaviour of the system, making it move back and forth between them and is always pushed and pulled to different paths.</p>
<p>The chaos of the Lorenz system can be more apparent clearer when we view separately the changes through time of each variable <img src="https://latex.codecogs.com/png.latex?X">, <img src="https://latex.codecogs.com/png.latex?Y">, and <img src="https://latex.codecogs.com/png.latex?Z">.</p>
<div class="quarto-embed-nb-cell">
<div id="cell-xyz" class="cell" data-execution_count="5">
<div class="cell-output cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://singuyenmai.github.io/blog/chaotic-butterfly.en_files/figure-html/-workshop-lorenz_attractor-lorenz_system-xyz-output-1.png" id="xyz" class="img-fluid quarto-figure quarto-figure-center anchored figure-img"></p>
</figure>
</div>
</div>
</div>
</div>
<p>As you can see, all the variables fluctuate wildly over time. They never stops changing and there is no repeated cycle. The only repeated thing, or pattern, that we can find is that they fluctuate, and that’s it.</p>
<p>So that, is <em>chaos</em>.</p>
</section>
<section id="chaos-and-determinism" class="level1">
<h1>Chaos and Determinism</h1>
<p>Considering one big assumption of the Lorenz model, we will see more of its beauty.</p>
<p>First, what the model assumed is that there are certain fixed rules for the changes of atmospheric convection, which, are represented by the ODEs. This assumption is <em>determinism</em>. And in the Lorenz system, those rules are also very simple, However, to what we’ve seen, the system behaviour is extremely complex and the dynamics are “<em>chaotic</em>”. So all of these tell us that, strangely yet beautifully, <strong>chaos can come from determinism</strong> and <strong>complex changes can come from just simple rules</strong>.</p>
<p>There is another way to interpret this. That is when we observe and study the outside world, although some systems may appear to behave chaotically and their changes over time may seem so complex, there is still a possibility that such systems are actually determined by some fixed, and perhaps simple, rules.</p>
<p>In my perspective, this interpretation aligns with a core philosophy of the ancient <strong><em>I Ching</em></strong>, or <strong><em>The Book of Changes</em></strong>. That is: the world changes, but there should be rules, and the rules are constant.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<p>I’ve learned to demonstrate (computationally) the Lorenz system from the following work:</p>
<ul>
<li><a href="https://geoffboeing.com/2016/12/animating-lorenz-attractor-python/" class="uri">https://geoffboeing.com/2016/12/animating-lorenz-attractor-python/</a></li>
<li><a href="https://fromsystosys.netlify.app/2018/07/28/lorenz-attractor-animation-plotly/" class="uri">https://fromsystosys.netlify.app/2018/07/28/lorenz-attractor-animation-plotly/</a></li>
</ul>
<p>Other pieces of introductory articles about strange attractors, the Butterfly effect, and fractals</p>
<ul>
<li><a href="https://fractalfoundation.org/OFC/OFC-7-1.html/" class="uri">https://fractalfoundation.org/OFC/OFC-7-1.html/</a></li>
<li><a href="https://hypertextbook.com/chaos/strange/" class="uri">https://hypertextbook.com/chaos/strange/</a></li>
</ul>


</section>

 ]]></description>
  <guid>https://singuyenmai.github.io/blog/chaotic-butterfly.en.html</guid>
  <pubDate>Sat, 23 Mar 2024 08:19:10 GMT</pubDate>
  <media:content url="https://singuyenmai.github.io/workshop/lorenz_attractor/lorenz_butterfly.png" medium="image" type="image/png" height="115" width="144"/>
</item>
</channel>
</rss>
